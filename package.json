{
  "name": "teasim-boilerplate",
  "version": "3.0.1-alpha.3",
  "description": "teasim-boilerplate",
  "repository": {
    "type": "git",
    "url": "git://github.com/teasim/boilerplate.git"
  },
  "author": "Billgo",
  "license": "MIT",
  "scripts": {
    "analyze:clean": "rimraf stats.json",
    "preanalyze": "npm run analyze:clean",
    "analyze": "node ./internals/scripts/analyze.js",
    "extract-intl": "babel-node --presets env,stage-0 -- ./internals/scripts/extract-intl.js",
    "npmcheckversion": "node ./internals/scripts/npmcheckversion.js",
    "preinstall": "npm run npmcheckversion",
    "postinstall": "npm run build:dll",
    "prebuild": "npm run build:clean",
    "build": "cross-env NODE_ENV=production webpack --config internals/webpack/webpack.prod.babel.js --color -p --progress --hide-modules",
    "build:clean": "rimraf ./build",
    "build:dll": "node ./internals/scripts/dependencies.js",
    "start": "cross-env NODE_ENV=development node server",
    "start:tunnel": "cross-env NODE_ENV=development ENABLE_TUNNEL=true node server",
    "start:production": "npm run test && npm run build && npm run start:prod",
    "start:prod": "cross-env NODE_ENV=production node server",
    "presetup": "npm i chalk shelljs",
    "setup": "node ./internals/scripts/setup.js",
    "postsetup": "npm run build:dll",
    "clean": "shjs ./internals/scripts/clean.js",
    "clean:all": "npm run analyze:clean && npm run test:clean && npm run build:clean",
    "generate": "plop --plopfile internals/generators/index.js",
    "lint": "npm run lint:js",
    "lint:eslint": "eslint --ignore-path .eslintignore --ignore-pattern internals/scripts",
    "lint:js": "npm run lint:eslint -- . ",
    "lint:staged": "lint-staged",
    "pretest": "npm run test:clean && npm run lint",
    "test:clean": "rimraf ./coverage",
    "test": "cross-env NODE_ENV=test jest --coverage",
    "test:watch": "cross-env NODE_ENV=test jest --watchAll",
    "jest": "cross-env NODE_ENV=test jest",
    "coveralls": "cat ./coverage/lcov.info | coveralls"
  },
  "lint-staged": {
    "*.js": "lint:eslint"
  },
  "pre-commit": "lint:staged",
  "babel": {
    "presets": [
      [
        "env",
        {
          "targets": {
            "browsers": [
              "last 2 versions",
              "safari >= 7"
            ]
          },
          "loose": true,
          "modules": "commonjs",
          "include": [
            "transform-es2015-arrow-functions",
            "es6.map"
          ],
          "exclude": [
            "transform-regenerator",
            "es6.set"
          ]
        }
      ],
      "es2015",
      "react",
      "stage-1",
      "flow"
    ],
    "env": {
      "production": {
        "only": [
          "client"
        ],
        "plugins": [
          "transform-react-remove-prop-types",
          "transform-react-constant-elements",
          "transform-react-inline-elements"
        ]
      },
      "test": {
        "plugins": [
          "transform-es2015-modules-commonjs",
          "dynamic-import-node"
        ]
      }
    }
  },
  "jest": {
    "collectCoverageFrom": [
      "client/**/*.{js,jsx}",
      "!client/**/*.test.{js,jsx}",
      "!client/*/RbGenerated*/*.{js,jsx}",
      "!client/app/index.js"
    ],
    "coverageThreshold": {
      "global": {
        "statements": 98,
        "branches": 91,
        "functions": 98,
        "lines": 98
      }
    },
    "moduleDirectories": [
      "node_modules",
      "client"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules/",
      "<rootDir>/internals/"
    ],
    "moduleNameMapper": {
      ".*\\.(css|less|styl|scss|sass)$": "<rootDir>/internals/mocks/cssModule.js",
      ".*\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/image.js"
    },
    "setupTestFrameworkScriptFile": "<rootDir>/internals/testing/test-bundler.js",
    "setupFiles": [
      "<rootDir>/internals/mocks/scrollbarSize.js"
    ],
    "testRegex": ".*\\.jest\\.js$",
    "verbose": true
  },
  "dllPlugin": {
    "path": "node_modules/react-boilerplate-dlls",
    "exclude": [
      "chalk",
      "compression",
      "cross-env",
      "express",
      "ip",
      "minimist"
    ],
    "include": [
      "core-js",
      "eventsource-polyfill",
      "babel-polyfill"
    ]
  },
  "standard": {
    "parser": "babel-eslint",
    "ignore": [
      "build/**",
      "server/**",
      "internals/**",
      "node_modules/**",
      "node_modules_old/**",
      "**/node_modules/*",
      "**/node_modules_old/*"
    ],
    "global": [
      "afterAll",
      "afterEach",
      "beforeAll",
      "beforeEach",
      "describe",
      "expect",
      "fdescribe",
      "fit",
      "getComputedStyle",
      "it",
      "jest",
      "spyOn"
    ]
  },
  "eslintConfig": {
    "parser": "babel-eslint",
    "extends": [
      "eslint:recommended",
      "plugin:jest/recommended",
      "plugin:flowtype/recommended"
    ],
    "env": {
      "browser": true,
      "node": true,
      "jest": true,
      "es6": true
    },
    "plugins": [
      "babel",
      "react",
      "flowtype",
      "import",
      "jest"
    ],
    "parserOptions": {
      "ecmaVersion": 6,
      "sourceType": "module",
      "ecmaFeatures": {
        "jsx": true
      }
    },
    "rules": {
      "array-bracket-spacing": [
        "error",
        "never"
      ],
      "arrow-spacing": "error",
      "arrow-parens": [
        "error",
        "as-needed",
        {
          "requireForBlockBody": true
        }
      ],
      "arrow-body-style": [
        "error",
        "as-needed"
      ],
      "block-spacing": [
        "error",
        "always"
      ],
      "brace-style": "error",
      "comma-dangle": [
        "error",
        "never"
      ],
      "comma-spacing": [
        "error",
        {
          "before": false,
          "after": true
        }
      ],
      "comma-style": [
        "error",
        "last"
      ],
      "computed-property-spacing": [
        "error",
        "never"
      ],
      "consistent-this": [
        "error",
        "self"
      ],
      "consistent-return": "off",
      "dot-notation": "error",
      "dot-location": [
        "error",
        "property"
      ],
      "eqeqeq": [
        "error",
        "smart"
      ],
      "eol-last": "error",
      "indent": [
        "error",
        2,
        {
          "SwitchCase": 1
        }
      ],
      "id-blacklist": [
        "error",
        "e"
      ],
      "jsx-quotes": [
        "error",
        "prefer-single"
      ],
      "keyword-spacing": "error",
      "key-spacing": "error",
      "max-len": [
        "error",
        520,
        4
      ],
      "new-cap": [
        "off",
        {
          "capIsNew": true,
          "newIsCap": true
        }
      ],
      "no-use-before-define": [
        "error",
        "nofunc"
      ],
      "no-unused-expressions": "error",
      "no-unused-vars": "error",
      "no-shadow": "off",
      "no-spaced-func": "error",
      "no-multiple-empty-lines": "error",
      "no-multi-spaces": "error",
      "no-undef": "error",
      "no-empty-pattern": "error",
      "no-dupe-keys": "error",
      "no-dupe-args": "error",
      "no-duplicate-case": "error",
      "no-cond-assign": "error",
      "no-extra-semi": "error",
      "no-extra-boolean-cast": "error",
      "no-trailing-spaces": "error",
      "no-underscore-dangle": [
        "error",
        {
          "allowAfterThis": true
        }
      ],
      "no-unneeded-ternary": "error",
      "no-unreachable": "error",
      "no-var": "error",
      "one-var": [
        "error",
        "never"
      ],
      "no-mixed-operators": [
        "off",
        {
          "groups": [
            [
              "+",
              "-",
              "*",
              "/",
              "%",
              "**"
            ],
            [
              "&",
              "|",
              "^",
              "~",
              "<<",
              ">>",
              ">>>"
            ],
            [
              "==",
              "!=",
              "===",
              "!==",
              ">",
              ">=",
              "<",
              "<="
            ],
            [
              "&&",
              "||"
            ],
            [
              "in",
              "instanceof"
            ]
          ],
          "allowSamePrecedence": true
        }
      ],
      "operator-linebreak": [
        "off",
        "before"
      ],
      "padded-blocks": [
        "error",
        "never"
      ],
      "prefer-arrow-callback": "off",
      "prefer-const": "error",
      "prefer-template": "error",
      "quotes": [
        "error",
        "single",
        {
          "allowTemplateLiterals": true
        }
      ],
      "semi": [
        "error",
        "never"
      ],
      "space-before-blocks": [
        "error",
        "always"
      ],
      "space-before-function-paren": [
        "error",
        "always"
      ],
      "space-infix-ops": "error",
      "space-unary-ops": [
        "error",
        {
          "words": true,
          "nonwords": false
        }
      ],
      "spaced-comment": "error",
      "yoda": "error",
      "babel/object-curly-spacing": [
        "error",
        "always"
      ],
      "generator-star-spacing": "error",
      "no-await-in-loop": "error",
      "jest/no-disabled-tests": "warn",
      "jest/no-focused-tests": "error",
      "jest/no-identical-title": "error",
      "jest/valid-expect": "error",
      "react/display-name": "error",
      "react/jsx-boolean-value": [
        "error",
        "never"
      ],
      "react/jsx-closing-bracket-location": [
        "error",
        {
          "selfClosing": "tag-aligned",
          "nonEmpty": "after-props"
        }
      ],
      "react/jsx-curly-spacing": "error",
      "react/jsx-equals-spacing": "error",
      "react/jsx-filename-extension": [
        "error",
        {
          "extensions": [
            ".js"
          ]
        }
      ],
      "react/jsx-first-prop-new-line": [
        "error",
        "multiline"
      ],
      "react/jsx-handler-names": "error",
      "react/jsx-indent": [
        "error",
        2
      ],
      "react/jsx-indent-props": [
        "error",
        2
      ],
      "react/jsx-max-props-per-line": [
        "error",
        {
          "maximum": 3
        }
      ],
      "react/jsx-tag-spacing": [
        "error",
        {
          "beforeSelfClosing": "always"
        }
      ],
      "react/jsx-no-comment-textnodes": "error",
      "react/jsx-no-duplicate-props": "error",
      "react/jsx-no-undef": "error",
      "react/jsx-pascal-case": "error",
      "react/jsx-space-before-closing": "error",
      "react/jsx-uses-react": "error",
      "react/jsx-uses-vars": "error",
      "react/jsx-wrap-multilines": "error",
      "react/no-danger": "error",
      "react/no-deprecated": "error",
      "react/no-did-mount-set-state": "error",
      "react/no-did-update-set-state": "error",
      "react/no-direct-mutation-state": "error",
      "react/no-multi-comp": "off",
      "react/no-render-return-value": "error",
      "react/no-is-mounted": "error",
      "react/no-unknown-property": "error",
      "react/prefer-arrow-callback": "off",
      "react/prefer-es6-class": "error",
      "react/prop-types": "error",
      "react/react-in-jsx-scope": "error",
      "import/extensions": "off",
      "import/newline-after-import": 0,
      "import/no-dynamic-require": 0,
      "import/no-extraneous-dependencies": 0,
      "import/no-named-as-default": 0,
      "import/prefer-default-export": 0,
      "import/no-webpack-loader-syntax": 0,
      "react/require-render-return": "error",
      "react/self-closing-comp": "error",
      "react/sort-comp": "error",
      "react/no-string-refs": "warn",
      "strict": "off",
      "no-case-declarations": "off",
      "react/jsx-key": "off",
      "react/jsx-no-bind": "off",
      "react/jsx-no-literals": "off",
      "react/jsx-no-target-blank": "off",
      "react/jsx-sort-props": "off",
      "react/no-set-state": "off",
      "react/forbid-prop-types": "off",
      "react/prefer-stateless-function": "off",
      "react/require-optimization": "off",
      "babel/object-shorthand": "off",
      "babel/new-cap": "off",
      "flowtype/object-type-delimiter": [
        "error",
        "comma"
      ],
      "flowtype/boolean-style": [
        "error",
        "boolean"
      ],
      "flowtype/define-flow-type": "error",
      "flowtype/delimiter-dangle": [
        "error",
        "never"
      ],
      "flowtype/generic-spacing": [
        "error",
        "never"
      ],
      "flowtype/no-primitive-constructor-types": "error",
      "flowtype/no-types-missing-file-annotation": "error",
      "flowtype/no-weak-types": "error",
      "flowtype/require-parameter-type": "error",
      "flowtype/require-return-type": [
        "error",
        "always",
        {
          "annotateUndefined": "never"
        }
      ],
      "flowtype/require-valid-file-annotation": "error",
      "flowtype/space-after-type-colon": [
        "error",
        "always"
      ],
      "flowtype/space-before-generic-bracket": [
        "error",
        "never"
      ],
      "flowtype/space-before-type-colon": [
        "error",
        "never"
      ],
      "flowtype/type-id-match": [
        "off",
        "^([A-Z][a-z0-9]+)+Type$"
      ],
      "flowtype/union-intersection-spacing": [
        "error",
        "always"
      ],
      "flowtype/use-flow-type": 1,
      "flowtype/valid-syntax": 1
    },
    "settings": {
      "import/resolver": {
        "webpack": {
          "config": "./internals/webpack/webpack.prod.babel.js"
        }
      },
      "flowtype": {
        "onlyFilesWithFlowAnnotation": true
      }
    }
  },
  "devDependencies": {
    "autoprefixer": "^7.1.5",
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-eslint": "^8.0.1",
    "babel-jest": "^21.2.0",
    "babel-loader": "^7.1.2",
    "babel-plugin-dynamic-import-node": "^1.1.0",
    "babel-plugin-react-docgen": "^1.8.1",
    "babel-plugin-react-intl": "^2.3.1",
    "babel-plugin-react-transform": "^3.0.0",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-plugin-transform-react-constant-elements": "^6.23.0",
    "babel-plugin-transform-react-inline-elements": "^6.22.0",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.10",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-env": "^1.6.1",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-es2016": "^6.24.1",
    "babel-preset-flow": "^6.23.0",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-0": "^6.24.1",
    "case-sensitive-paths-webpack-plugin": "^2.1.1",
    "chalk": "^2.2.0",
    "cheerio": "^0.22.0",
    "circular-dependency-plugin": "^4.2.1",
    "compression": "^1.7.1",
    "coveralls": "^3.0.0",
    "cpx": "^1.5.0",
    "cross-env": "^5.1.0",
    "css-loader": "^0.28.7",
    "dom-helpers": "^3.2.1",
    "empty-module": "0.0.2",
    "enzyme": "^3.1.0",
    "eslint": "^4.9.0",
    "eslint-config-standard": "^10.2.1",
    "eslint-config-standard-jsx": "^4.0.2",
    "eslint-config-standard-react": "^5.0.0",
    "eslint-import-resolver-webpack": "^0.8.3",
    "eslint-plugin-babel": "^4.1.2",
    "eslint-plugin-flowtype": "^2.39.1",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-jest": "^21.2.0",
    "eslint-plugin-node": "^5.2.0",
    "eslint-plugin-promise": "^3.6.0",
    "eslint-plugin-react": "^7.4.0",
    "eslint-plugin-standard": "^3.0.1",
    "eventsource-polyfill": "^0.9.6",
    "expect": "^21.2.1",
    "exports-loader": "^0.6.4",
    "express": "^4.16.2",
    "extract-text-webpack-plugin": "^3.0.1",
    "file-loader": "^1.1.5",
    "flow-bin": "^0.58.0",
    "fs-extra": "^4.0.2",
    "gulp": "github:gulpjs/gulp#4.0",
    "gulp-util": "^3.0.8",
    "html-loader": "^0.5.1",
    "html-webpack-plugin": "^2.30.1",
    "http-proxy-middleware": "^0.17.4",
    "image-webpack-loader": "^3.4.2",
    "imports-loader": "^0.7.1",
    "ip": "^1.1.5",
    "jest": "^21.2.1",
    "jest-cli": "^21.2.1",
    "jsx-loader": "^0.13.2",
    "lerna": "^2.0.0-rc.5",
    "less": "^2.7.2",
    "less-loader": "^4.0.5",
    "less-vars-loader": "^1.1.0",
    "lint-staged": "^4.3.0",
    "lodash.defaultsdeep": "^4.6.0",
    "lodash.pullall": "^4.2.0",
    "lodash.uniq": "^4.5.0",
    "minimist": "^1.2.0",
    "moment-jalaali": "^0.7.2",
    "node-plop": "^0.9.0",
    "null-loader": "^0.1.1",
    "offline-plugin": "^4.8.4",
    "open-browser-webpack-plugin": "0.0.5",
    "plop": "^1.9.0",
    "postcss": "^6.0.13",
    "postcss-cli": "^4.1.1",
    "postcss-loader": "^2.0.8",
    "pre-commit": "^1.2.2",
    "raf": "^3.4.0",
    "react-hot-loader": "^3.1.1",
    "redux-devtools-extension": "^2.13.2",
    "regenerator-runtime": "^0.11.0",
    "rimraf": "^2.6.2",
    "serve-favicon": "^2.4.5",
    "shelljs": "^0.7.8",
    "sinon": "^4.1.1",
    "standard": "^10.0.3",
    "style-loader": "^0.19.0",
    "teasim-samples": "^3.1.2",
    "teasim-tools": "^3.3.1",
    "url-loader": "^0.6.2",
    "webpack": "^3.8.1",
    "webpack-dev-middleware": "^1.12.0",
    "webpack-hot-middleware": "^2.20.0"
  },
  "dependencies": {
    "babel-polyfill": "^6.26.0",
    "history": "^4.7.2",
    "immutable": "^3.8.2",
    "intl": "^1.2.5",
    "isomorphic-fetch": "^2.2.1",
    "jwt-decode": "^2.2.0",
    "moment": "^2.19.1",
    "prop-types": "^15.6.0",
    "react": "^16.0.0",
    "react-addons-shallow-compare": "^15.6.2",
    "react-cookie": "^2.1.1",
    "react-dom": "^16.0.0",
    "react-helmet": "^5.2.0",
    "react-intl": "^2.4.0",
    "react-portal": "^4.0.0",
    "react-redux": "^5.0.6",
    "react-router": "^4.2.0",
    "react-router-dom": "^4.2.2",
    "react-router-redux": "5.0.0-alpha.6",
    "react-transition-group": "^2.2.1",
    "redux": "^3.7.2",
    "redux-immutable": "^4.0.0",
    "redux-logger": "^3.0.6",
    "redux-promise": "^0.5.3",
    "redux-thunk": "^2.2.0",
    "teasim": "^3.3.1",
    "teasim-assists": "^3.3.0",
    "teasim-helpers": "^3.3.0",
    "teasim-less": "^3.3.1",
    "teasim-middleware-fetch": "^3.3.0",
    "teasim-presets": "^3.3.0",
    "teasim-shims": "^3.3.0",
    "teasim-styles": "^3.3.0",
    "whatwg-fetch": "^2.0.3"
  },
  "npmName": "TeasimBoilerplate"
}
